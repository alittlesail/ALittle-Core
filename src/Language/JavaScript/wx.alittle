
[Language(JavaScript)]
register namespace javascript;

public struct WxSystemInfo
{
    int pixelRatio;
	int windowWidth;
	int windowHeight;
}

public struct WxRequestInfo
{
    string url; // 必填 开发者服务器接口地址
	any data;	// string/object/ArrayBuffer 选填 请求的参数
	string dataType;	// 返回值类型
    string responseType;	// 返回值类型
	int timeout;	// 超时时间 选填
	string method;	// GET/POST 选填
	Map<string, string> header;	// http头
	Functor<(WxResponseInfo)> success;	// 成功时调用
	Functor<()> fail;		// 失败时调用
	Functor<()> complete;	// 不论成功失败都会调用
}

public struct WxResponseInfo
{
    any data;
	string statusCode;
	Map<string, string> header;
}

public class WxRequestTask
{
    public fun abort() {}
}

public struct WxWorkerEvent
{
    any data;
}

public class WxWorker
{
    // 主线程接收支线程的消息
    // 支线程接收主线程的消息
    public fun onMessage(Functor<(WxWorkerEvent)> func) {}

    // 主线程向支线程发送消息
    // 支线程向主线程发送消息
    public fun postMessage(any data) {}

    // 停止工作
    public fun terminate() {}
}

[Native]
public class wx
{
	public fun getSystemInfoSync() : WxSystemInfo {}
	public fun onTouchStart(Functor<(javascript.DomElementOnTouchEvent)> callback) {}
	public fun onTouchMove(Functor<(javascript.DomElementOnTouchEvent)> callback) {}
	public fun onTouchEnd(Functor<(javascript.DomElementOnTouchEvent)> callback) {}
    public fun onTouchCancel(Functor<(javascript.DomElementOnTouchEvent)> callback) {}
	public fun request(WxRequestInfo info) : WxRequestTask {}
    public fun createWorker(string uri) : WxWorker {}
}

// 微信小游戏，支线程使用的唯一worker对象
public var worker:WxWorker;

